<launch>
    <arg name="robot_ip" default="192.168.1.103" />
    <arg name="reverse_ip" default="192.168.1.2" />
    <arg name="kinematics_config" default="$(find homestri_bringup)/etc/b_bot_calibration.yaml" />
    <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
    <arg name="stopped_controllers" default="joint_group_vel_controller motion_control_handle cartesian_motion_controller cartesian_force_controller cartesian_compliance_controller"/>
    <arg name="controller_config_file" default="$(find homestri_bringup)/config/b_bot_controllers.yaml" />
    <arg name="moveit_controller_config_file" default="$(find homestri_bringup)/config/b_bot_moveit_controllers.yaml" />
    <arg name="urdf_path" default="$(find homestri_description)/urdf/scenes/b_bot_scene.xacro"/>
    <arg name="gripper_ip" default="192.168.1.1"/>
    <arg name="gripper_port" default="502"/>
    <arg name="use_rviz" default="true" />

    <!-- Set the robot urdf on the parameter server -->
    <param name="robot_description" command="$(find xacro)/xacro '$(arg urdf_path)' 
        kinematics_parameters_file:=$(arg kinematics_config)" 
    />

    <!-- Convert joint states to /tf tranforms -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- Control motion and compliance controller with one handle -->
    <remap from="motion_control_handle/target_frame" to="target_frame" />
    <remap from="cartesian_motion_controller/target_frame" to="target_frame" />
    <remap from="cartesian_compliance_controller/target_frame" to="target_frame" />
    <!-- Control wrenches via one topic -->
    <remap from="cartesian_force_controller/target_wrench" to="target_wrench" />
    <remap from="cartesian_compliance_controller/target_wrench" to="target_wrench" />
    <!-- Read wrenches via one topic -->
    <remap from="cartesian_force_controller/ft_sensor_wrench" to="wrench_filtered" />
    <remap from="cartesian_compliance_controller/ft_sensor_wrench" to="wrench_filtered" />
    <!-- ur5e driver -->
    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
        <arg name="robot_ip" value="$(arg robot_ip)" />
        <arg name="reverse_ip" value="$(arg reverse_ip)" />
        <arg name="kinematics_config" value="$(arg kinematics_config)" />
        <arg name="controllers" value="$(arg controllers)"/>
        <arg name="stopped_controllers" value="$(arg stopped_controllers)" />
        <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    </include>

    <!-- launch gripper driver -->
    <include file="$(find onrobot_rg2ft_action_server)/launch/onrobot_rg2ft_action_server.launch">
        <arg name="ip" value="$(arg gripper_ip)" />
        <arg name="port" value="$(arg gripper_port)" />
        <arg name="gripper_name" value="onrobot_rg2ft" />
    </include>

    <!-- launch moveit -->
    <include file="$(find homestri_b_bot_moveit_config)/launch/move_group.launch">
        <arg name="moveit_controller_manager" value="simple" />
        <arg name="load_robot_description" value="false"/>
    </include>
    <!-- Load moveit controller list to the parameter server -->
    <rosparam file="$(arg moveit_controller_config_file)" ns="move_group"/>

    <!-- launch rviz -->
    <group if="$(arg use_rviz)">
        <arg name="my_rviz" value="-d $(find homestri_bringup)/rviz/b_bot_bringup.rviz" />
        <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="$(arg my_rviz)" output="screen" />
    </group>

</launch>